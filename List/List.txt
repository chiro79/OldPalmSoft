#ifdef __GNUC__
#    include <PalmOS.h>    // for PRC Tool compatability
#endif
#define MainForm        1000
#define	FirstPopup	2006	
#define	FirstList	2005	
#define UnitsPopup	3006
#define UnitsList	3005
#define MainField	1010	
#define	listCount	5
#define listCountM 	40

// *** PUT UI-DEFINITIONS HERE *** //

void LstDrawList (ListType *pList) SYS_TRAP(sysTrapLstDrawList);
	void LstSetDrawFunction (ListType *pList, ListDrawDataFuncPtr func) 
		SYS_TRAP(sysTrapLstSetDrawFunction);
	void WinDrawTruncChars (Char *c, int i, int x, int y, int w)
		SYS_TRAP(sysTrapWinDrawTruncChars);
void    *
getObjectPtr (FormPtr pForm, Int16 resourceNo);
// Prototypes
int d,g;
static Boolean appHandleEvent (EventPtr pEvent);
static void    mainFormInit (FormPtr pForm);
static Boolean mainFormEventHandler (EventPtr pEvent);
static Boolean doMainMenu (FormPtr pForm, UInt16 command);
static void getFieldText (UInt32 fIndex, char *StrToGet);
static void setFieldText (UInt32 fIndex, char *StrToShow);
// Code
static void startApp() {return;}
static void stopApp()  {return;}

Char	*listString[listCountM]	= {"A", "B", "C", "D", "E", "F","G","H","I","J","K","L","M",
				"N","O","P","Q","R","S","T","U","V","W","X","Y","Z",
				"A1", "B1", "C1", "D1", "E1", "F1","G1","H1","I1","J1","K1","L1","M1",
				"N1"
//,"O1","P1","Q1","R1","S1","T1","U1","V1","W1","X1","Y1","Z1"
};


Char	*listString0[listCount]	= {"one", "two", "three", "four","five"};
Char	*listString1[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString2[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString3[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString4[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString5[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString6[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString7[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString8[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString9[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString10[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString11[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString12[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString13[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString14[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString15[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString16[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString17[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString18[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString19[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString20[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString21[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString22[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString23[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString24[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString25[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString26[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString27[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString28[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString29[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString30[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString31[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString32[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString33[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString34[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString35[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString36[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString37[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString38[listCount]	= {"one", "two", "three", "four", "five"};
Char	*listString39[listCount]	= {"one", "two", "three", "four", "five"};
//Char	*listString40[listCount]	= {"one", "two", "three", "four", "five"};
//Char	*listString41[listCount]	= {"one", "two", "three", "four", "five"};





//////////////////////////////////////////////////////////////////////////////////////


void	drawList	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString[i], StrLen(listString[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCountM);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList);

		// Don't redraw the list
	}

void	drawList0	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString0[i], StrLen(listString0[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList0(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList0);

		// Don't redraw the list
	}
	
void	drawList1	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString1[i], StrLen(listString1[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList1(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList1);

		// Don't redraw the list
	}


void	drawList2	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString2[i], StrLen(listString2[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList2(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList2);

		// Don't redraw the list
	}


void	drawList3	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString3[i], StrLen(listString3[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList3(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList3);

		// Don't redraw the list
	}

void	drawList4	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString4[i], StrLen(listString4[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList4(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList4);

		// Don't redraw the list
	}


void	drawList5	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString5[i], StrLen(listString5[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList5(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList5);

		// Don't redraw the list
	}

void	drawList6	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString6[i], StrLen(listString6[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList6(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList6);

		// Don't redraw the list
	}

void	drawList7	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString7[i], StrLen(listString7[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList7(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList7);

		// Don't redraw the list
	}

void	drawList8	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString8[i], StrLen(listString8[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList8(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList8);

		// Don't redraw the list
	}

void	drawList9	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString9[i], StrLen(listString9[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList9(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList9);

		// Don't redraw the list
	}
void	drawList10	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString10[i], StrLen(listString10[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList10(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList10);

		// Don't redraw the list
	}

void	drawList11	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString11[i], StrLen(listString11[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList11(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList11);

		// Don't redraw the list
	}


void	drawList12	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString12[i], StrLen(listString12[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList12(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList12);

		// Don't redraw the list
	}

void	drawList13	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString13[i], StrLen(listString13[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList13(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList13);

		// Don't redraw the list
	}


void	drawList14	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString14[i], StrLen(listString14[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList14(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList14);

		// Don't redraw the list
	}
void	drawList15	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString15[i], StrLen(listString15[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList15(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList15);

		// Don't redraw the list
	}
void	drawList16	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString16[i], StrLen(listString16[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList16(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList16);

		// Don't redraw the list
	}


void	drawList17	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString17[i], StrLen(listString17[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList17(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList17);

		// Don't redraw the list
	}

void	drawList18	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString18[i], StrLen(listString18[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList18(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList18);

		// Don't redraw the list
	}

void	drawList19	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString19[i], StrLen(listString19[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList19(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList19);

		// Don't redraw the list
	}

void	drawList20	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString20[i], StrLen(listString20[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList20(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList20);

		// Don't redraw the list
	}

void	drawList21	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString21[i], StrLen(listString21[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList21(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList21);

		// Don't redraw the list
	}
void	drawList22	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString22[i], StrLen(listString22[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList22(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList22);

		// Don't redraw the list
	}

void	drawList23	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString23[i], StrLen(listString23[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList23(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList23);

		// Don't redraw the list
	}

void	drawList24	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString20[i], StrLen(listString24[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList24(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList24);

		// Don't redraw the list
	}

void	drawList25	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString25[i], StrLen(listString25[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList25(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList25);

		// Don't redraw the list
	}

void	drawList26	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString26[i], StrLen(listString26[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList26(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList26);

		// Don't redraw the list
	}

void	drawList27	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString27[i], StrLen(listString27[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList27(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList27);

		// Don't redraw the list
	}

void	drawList28	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString28[i], StrLen(listString28[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList28(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList28);

		// Don't redraw the list
	}

void	drawList29	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString29[i], StrLen(listString29[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList29(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList29);

		// Don't redraw the list
	}
void	drawList30	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString30[i], StrLen(listString30[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList30(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList30);

		// Don't redraw the list
	}

void	drawList31	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString31[i], StrLen(listString31[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList31(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList31);

		// Don't redraw the list
	}
void	drawList32	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString32[i], StrLen(listString32[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList32(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList32);

		// Don't redraw the list
	}


void	drawList33	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString33[i], StrLen(listString33[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList33(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList33);

		// Don't redraw the list
	}


void	drawList34	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString34[i], StrLen(listString34[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList34(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList34);

		// Don't redraw the list
	}

void	drawList35	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString35[i], StrLen(listString35[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList35(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList35);

		// Don't redraw the list
	}

void	drawList36	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString36[i], StrLen(listString36[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList36(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList36);

		// Don't redraw the list
	}

void	drawList37	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString37[i], StrLen(listString37[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList37(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList37);

		// Don't redraw the list
	}

void	drawList38	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString38[i], StrLen(listString38[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList38(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList38);

		// Don't redraw the list
	}
void	drawList39	(Int16	i,
				RectangleType	*bounds,
				Char		**items)
	{
		WinDrawTruncChars (listString39[i], StrLen(listString39[i]),
			bounds->topLeft.x,
			bounds->topLeft.y,
			bounds->extent.x);
	}
void	setupList39(int lIndex)
	{
		FormPtr pForm	= FrmGetActiveForm();
		void	*pList	= getObjectPtr(pForm, lIndex);
		LstSetListChoices (pList, 0, listCount);
		LstSetDrawFunction (pList, (ListDrawDataFuncPtr) drawList39);

		// Don't redraw the list
	}



    UInt32
PilotMain
   (UInt16  cmd,
    void    *cmdPBP,
    UInt16  launchFlags)
{
    EventType    event;
    UInt16       error;
    if (cmd == sysAppLaunchCmdNormalLaunch)
    {
        startApp();
        FrmGotoForm(MainForm);
        do
        {
            // Wait for an event
            EvtGetEvent(&event, evtWaitForever);
            // ask event handlers, in turn, to deal with the event.
            if (!SysHandleEvent (&event))
            if (!MenuHandleEvent (0, &event, &error))
            if (!appHandleEvent (&event))
                FrmDispatchEvent (&event);
        } while (event.eType != appStopEvent);
        stopApp();
        FrmCloseAllForms();
    }
    return 0;
}
/*
 * top-level event handler for the application.
 */

    static Boolean
appHandleEvent (EventPtr pEvent)
{
    FormPtr pForm;
    Int16   formId;
    Boolean handled = false;
    if (pEvent->eType == frmLoadEvent)
    {
        // Load the resource for the form
        formId = pEvent->data.frmLoad.formID;
        pForm  = FrmInitForm(formId);
        FrmSetActiveForm(pForm);
        // install a form-specific event handler
        if (formId == MainForm)
            FrmSetEventHandler (pForm, mainFormEventHandler);
        // *** ADD NEW FORM HANDLING HERE *** //
        handled = true;
    }
    else if (pEvent->eType == menuEvent)
    {
        handled = doMainMenu(pForm, pEvent->data.menu.itemID);
    }
    return handled;
}

/*
 * Event handler for the main form.
 */

    static Boolean
mainFormEventHandler(EventPtr pEvent)
{
    Boolean handled = false;
    FormPtr pForm   = FrmGetActiveForm();
    switch (pEvent->eType)
    {
    case frmOpenEvent:    // Form's 1st event
        FrmDrawForm(pForm);
        mainFormInit(pForm);
        handled = true;
        break;
    // *** ADD EVENT HANDLING HERE *** //

case popSelectEvent:
	{
		// let's save the list selection -- this is the index of the 
		// thing the user tapped in the array we passed to the list

		int	i	= pEvent->data.popSelect.selection;

		// this is a check for *WHICH* list -- we'll leave it here
		// even though we only have one list

		switch (pEvent->data.popSelect.controlID)
		{
		
//////////////////////////////////////////////////////////////////////
case FirstPopup:

			setFieldText(MainField, listString[i]);
			

			if(i==0)
			{setupList0(UnitsList);
			d=0;}

			if(i==1)
			{setupList1(UnitsList);
			d=1;}
			if(i==2)
			{setupList2(UnitsList);
			d=2;}
			if(i==3)
			{setupList3(UnitsList);
			d=3;}
			if(i==4)
			{setupList4(UnitsList);
			d=4;}
			if(i==5)
			{setupList5(UnitsList);
			d=5;}
			if(i==6)
			{setupList6(UnitsList);
			d=6;}
			if(i==7)
			{setupList7(UnitsList);
			d=7;}
			if(i==8)
			{setupList8(UnitsList);
			d=8;}
			if(i==9)
			{setupList2(UnitsList);
			d=9;}
			if(i==10)
			{setupList10(UnitsList);
			d=10;}

			if(i==11)
			{setupList11(UnitsList);
			d=11;}

			if(i==12)
			{setupList12(UnitsList);
			d=12;}

			if(i==13)
			{setupList13(UnitsList);
			d=13;}

			if(i==14)
			{setupList14(UnitsList);
			d=14;}

			if(i==15)
			{setupList15(UnitsList);
			d=15;}

			if(i==16)
			{setupList16(UnitsList);
			d=16;}

			if(i==17)
			{setupList17(UnitsList);
			d=17;}

			if(i==18)
			{setupList18(UnitsList);
			d=18;}

			if(i==19)
			{setupList19(UnitsList);
			d=19;}

			if(i==20)
			{setupList2(UnitsList);
			d=20;}
			if(i==21)
			{setupList21(UnitsList);
			d=21;}
			if(i==22)
			{setupList22(UnitsList);
			d=22;}
			if(i==23)
			{setupList23(UnitsList);
			d=23;}
			if(i==2)
			{setupList24(UnitsList);
			d=2;}
			if(i==25)
			{setupList25(UnitsList);
			d=25;}
			if(i==26)
			{setupList26(UnitsList);
			d=26;}
			if(i==27)
			{setupList27(UnitsList);
			d=27;}
			if(i==28)
			{setupList28(UnitsList);
			d=28;}
			if(i==29)
			{setupList29(UnitsList);
			d=29;}
			if(i==30)
			{setupList30(UnitsList);
			d=30;}
			if(i==31)
			{setupList31(UnitsList);
			d=31;}
			if(i==32)
			{setupList3(UnitsList);
			d=32;}
			if(i==33)
			{setupList33(UnitsList);
			d=33;}
			if(i==34)
			{setupList34(UnitsList);
			d=34;}
			if(i==35)
			{setupList35(UnitsList);
			d=35;}
			if(i==36)
			{setupList36(UnitsList);
			d=36;}
			if(i==37)
			{setupList37(UnitsList);
			d=37;}
			if(i==38)
			{setupList38(UnitsList);
			d=38;}
			if(i==39)
			{setupList39(UnitsList);
			d=39;}
			
			handled = true;
			break;
		
	case UnitsPopup:
			if(d==0)
			{setFieldText(MainField, listString0[i]);}
			
			if(d==1)
			{setFieldText(MainField, listString1[i]);}
			if(d==2)
			{setFieldText(MainField, listString2[i]);}
			if(d==3)
			{setFieldText(MainField, listString3[i]);}
			if(d==4)
			{setFieldText(MainField, listString4[i]);}
			if(d==5)
			{setFieldText(MainField, listString5[i]);}
			if(d==6)
			{setFieldText(MainField, listString6[i]);}
			if(d==7)
			{setFieldText(MainField, listString7[i]);}
			if(d==8)
			{setFieldText(MainField, listString8[i]);}
			if(d==9)
			{setFieldText(MainField, listString9[i]);}
			if(d==10)
			{setFieldText(MainField, listString10[i]);}
			if(d==11)
			{setFieldText(MainField, listString11[i]);}
			if(d==12)
			{setFieldText(MainField, listString12[i]);}
			if(d==13)
			{setFieldText(MainField, listString13[i]);}
			if(d==14)
			{setFieldText(MainField, listString14[i]);}
			if(d==15)
			{setFieldText(MainField, listString15[i]);}
			if(d==16)
			{setFieldText(MainField, listString16[i]);}
			if(d==17)
			{setFieldText(MainField, listString17[i]);}
			if(d==18)
			{setFieldText(MainField, listString18[i]);}
			if(d==19)
			{setFieldText(MainField, listString19[i]);}
			if(d==20)
			{setFieldText(MainField, listString20[i]);}
			if(d==21)
			{setFieldText(MainField, listString21[i]);}
			if(d==22)
			{setFieldText(MainField, listString22[i]);}
			if(d==23)
			{setFieldText(MainField, listString23[i]);}
			if(d==24)
			{setFieldText(MainField, listString24[i]);}
			if(d==25)
			{setFieldText(MainField, listString25[i]);}
			if(d==26)
			{setFieldText(MainField, listString26[i]);}
			if(d==27)
			{setFieldText(MainField, listString27[i]);}
			if(d==28)
			{setFieldText(MainField, listString28[i]);}
			if(d==29)
			{setFieldText(MainField, listString29[i]);}
			if(d==30)
			{setFieldText(MainField, listString30[i]);}
			if(d==31)
			{setFieldText(MainField, listString31[i]);}
			if(d==32)
			{setFieldText(MainField, listString32[i]);}
			if(d==33)
			{setFieldText(MainField, listString33[i]);}
			if(d==34)
			{setFieldText(MainField, listString34[i]);}
			if(d==35)
			{setFieldText(MainField, listString35[i]);}
			if(d==36)
			{setFieldText(MainField, listString36[i]);}
			if(d==37)
			{setFieldText(MainField, listString37[i]);}
			if(d==38)
			{setFieldText(MainField, listString38[i]);}
			if(d==39)
			{setFieldText(MainField, listString39[i]);}



/////////////////////////////////////////////////////////////////////////

			handled = true;
			break;
		}
	}
    default:
        break;
    }
    return handled;
}
/*
 * This is the menu handler for the main form.
 */
    static Boolean
doMainMenu (FormPtr pForm, UInt16 command)
{
    Boolean    handled    = false;
    switch(command)
    {
    // *** ADD MENU HANDLING HERE *** //
    }
    return handled;
}
/*
 * Startup code for the form.
 */
    static void
mainFormInit (FormPtr pForm)
{
    static Char    foo[10]    = "Hello GUI";
    WinDrawChars (foo,StrLen(foo),20,18);
	setupList (FirstList);
    // *** ADD FORM INITIALIZATION HERE *** //
}
    void    *
getObjectPtr (FormPtr pForm, Int16 resourceNo)
{
    UInt16 objIndex=FrmGetObjectIndex(pForm,resourceNo);
    return FrmGetObjectPtr(pForm,objIndex);
}

static void 
	setFieldText	(UInt32	fIndex, 
			 char	*StrToShow)
	{
		FormPtr frmP	= FrmGetActiveForm();
		void	*fieldP = getObjectPtr (frmP, fIndex);

		// get the field's old text handle
		MemHandle	oldH	= FldGetTextHandle(fieldP);
		
		//Copy our string into a memhandle

		int	len	= StrLen(StrToShow);
		MemHandle	mH	= MemHandleNew(len+1);
		char	*mP	= MemHandleLock(mH);

		StrCopy(mP, StrToShow);
		
		//The memhandle needs to be unlocked to work...
		MemHandleUnlock(mH);

		//To establish the field's link to the handle
		FldSetTextHandle(fieldP,mH);

		//To draw the field
		FldDrawField(fieldP);
		
		// get rid of old handle
		if (oldH != NULL)
			MemHandleFree (oldH);
	}

// Use a function like this to find out what the field's contents 
	// are and to put them into a string:

		static void 
	getFieldText (UInt32 fIndex, char *StrToGet)
	{
		FormPtr	frmP = FrmGetActiveForm();
		void	*fieldP = getObjectPtr (frmP, fIndex);

		MemHandle mH = FldGetTextHandle(fieldP);
		char *mP=MemHandleLock(mH);
		StrCopy(StrToGet, mP);
		
		MemHandleUnlock(mH);
	}

	

